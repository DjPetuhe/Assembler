STSEG SEGMENT PARA STACK "STACK"
	DB 64 DUP("STACK")
STSEG ENDS

DSEG SEGMENT PARA PUBLIC "DATA"
	MSGSIZE DB 'Enter array size (from 1 to 16): ','$'
	MSGINPUT DB 'Enter array elements:','$'
	MSGERROR DB 'Error!','$'
	MSGDOUBPOINTS DB ': ','$'
	MSGMIN DB 'Minimal number: ','$'
	MSGMAX DB 'Maximal number: ','$'
	MSGSUM DB 'Sum: ','$'
	MSGSORT DB 'Sorted array: ','$'
	MSGARRAY DB 'Current array: ','$'
	
	STRNUMBER LABEL BYTE
	MAXLEN DB 7
	NUMLEN DB 0
	NUMFLD DB 7 DUP(0DH)
	
	NONSORTEDARRAY DW 20 DUP (0)
	ARRAYSIZE DB 0
	
	MAXNUM DW 0
	MINNUM DW 0
	SUMNUM DW 0
	
	I DB 0
	J DB 0
	TEMPINDX DW 0
	TEMPSIZE DW 0
	TEMPNMBR DW 0
	ERRORBOOL DB 0
	NEGATIVE DB 0
	LIMITCONST EQU 32768
DSEG ENDS

CSEG SEGMENT PARA PUBLIC "CODE"

	ASSUME CS:CSEG, DS:DSEG, SS:STSEG

	MAIN PROC FAR
		PUSH DS
		MOV AX, 0
		PUSH AX
		MOV AX, DSEG
		MOV DS, AX
		
		CALL INPUTSIZE
		
		CALL TRANSLATENUMBER
		CMP ERRORBOOL, 0
		JG ERRORCLOSE
		CMP TEMPNMBR, 16
		JG ERRORCLOSE
		CMP TEMPNMBR, 1
		JL ERRORCLOSE
		MOV AX, TEMPNMBR
		MOV ARRAYSIZE, AL
		
		CALL INPUTARRAY
		CMP ERRORBOOL, 0
		JG ERRORCLOSE
		
		CALL FINDSUM
		CALL FINDMIN
		CALL FINDMAX
		CALL PRINTCURARR
		CALL SORT
		
		CALL PRINTRESULT
		JMP CLOSE
		
		ERRORCLOSE:
			CALL PRINTERROR
		CLOSE:
			RET
	MAIN ENDP
   
    INPUTSIZE PROC NEAR
   		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGSIZE
		INT 21H
		
		MOV AH, 0AH
		LEA DX, STRNUMBER
		INT 21H
		
		RET
    INPUTSIZE ENDP
   
    INPUTARRAY PROC NEAR
      	MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGINPUT
		INT 21H
		
		MOV I, 0
		MOV DI, 0
		INPUTLOOP:
			MOV BH, ARRAYSIZE
			CMP I, BH
			JE ENDINPUT
			
			MOV AL, 0AH
			INT 29H
			
			MOV AL, I
			XOR AH, AH
			MOV TEMPNMBR, AX
			INC TEMPNMBR
			CALL PRINTNUMBER
			
			MOV AH, 09H
			LEA DX, MSGDOUBPOINTS
			INT 21H
			
			MOV AH, 0AH
			LEA DX, STRNUMBER
			INT 21H
			
			CALL TRANSLATENUMBER
			CMP ERRORBOOL, 0
			JG ARRINPUTERROR
			
			MOV BX, TEMPNMBR
			MOV NONSORTEDARRAY+DI, BX
			ADD DI, 2
			INC I
			JMP INPUTLOOP
		ARRINPUTERROR:
			MOV ERRORBOOL, 1
		ENDINPUT:
			RET
    INPUTARRAY ENDP
   
    TRANSLATENUMBER PROC NEAR
		XOR AX, AX
		MOV BX, 10
		
		LEA SI, NUMFLD
		CMP BYTE PTR [SI], "-"
		JNE STARTLOOP
		
		MOV NEGATIVE, 1
		INC SI
		STARTLOOP:
			MOV CL, [SI]
			CMP CL, 0DH
			JE ENDLOOP
			
			IMUL BX
			JO TRANSLATEERROR
			
			CMP CL, 30H
			JB TRANSLATEERROR
			CMP CL, 39H
			JA TRANSLATEERROR
			
			SUB CL, 30H
			ADD AX, CX
			JO CHECKEXCEPTION
			
			INC SI
			JMP STARTLOOP
			
		CHECKEXCEPTION:
			CMP AX, LIMITCONST
			JNE TRANSLATEERROR
			CMP NEGATIVE, 0
			JE TRANSLATEERROR
			
		ENDLOOP:
			CMP NEGATIVE, 0
			JE FINISH
			NEG AX
			
		FINISH:
			MOV TEMPNMBR, AX
			MOV NEGATIVE, 0
			JMP TRANSLATERETURN
			
		TRANSLATEERROR:
			MOV ERRORBOOL, 1
			
		TRANSLATERETURN:
			RET
	TRANSLATENUMBER ENDP
   
    PRINTCURARR PROC NEAR
	   	MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGARRAY
		INT 021H
		
		CALL PRINTARRAY
		RET
	PRINTCURARR ENDP
	
    FINDSUM PROC NEAR
		LEA SI, NONSORTEDARRAY
		MOV I, 0
		MOV BH, ARRAYSIZE
		
		MOV SUMNUM, 0
		
		CMP I, BH
		JE ENDFINDSUM
		
		FINDSUMLOOP:
			MOV AX, [SI]
			
			ADD SUMNUM, AX
			JO ERRORSUM
			
			INC I
			MOV BH, [ARRAYSIZE]
			CMP I, BH
			JE ENDFINDSUM
			
			ADD SI, 2
			JMP FINDSUMLOOP
		
		ERRORSUM:
			MOV ERRORBOOL, 1
		ENDFINDSUM:
			RET
    FINDSUM ENDP
   
    FINDMIN PROC NEAR
		LEA SI, NONSORTEDARRAY
		MOV I, 0
		MOV BH, ARRAYSIZE
		
		CMP I, BH
		JE ENDFINDMIN
		
		MOV MINNUM, 32767
		
		FINDMINLOOP:
			MOV AX, [SI]
			
			CMP AX, MINNUM
			JGE SKIPMIN
			
			MOV MINNUM, AX
			
			SKIPMIN:
				INC I
				MOV BH, [ARRAYSIZE]
				CMP I, BH
				JE ENDFINDMIN
			
				ADD SI, 2
				JMP FINDMINLOOP
		ENDFINDMIN:
			RET
    FINDMIN ENDP
   
    FINDMAX PROC NEAR
		LEA SI, NONSORTEDARRAY
		MOV I, 0
		MOV BH, ARRAYSIZE
		
		CMP I, BH
		JE ENDFINDMIN
		
		MOV MAXNUM, -32768
		
		FINDMAXLOOP:
			MOV AX, [SI]
			
			CMP AX, MAXNUM
			JLE SKIPMAX
			
			MOV MAXNUM, AX
			
			SKIPMAX:
				INC I
				MOV BH, [ARRAYSIZE]
				CMP I, BH
				JE ENDFINDMAX
			
				ADD SI, 2
				JMP FINDMAXLOOP
		ENDFINDMAX:
			RET
    FINDMAX ENDP
   
    SORT PROC NEAR
		MOV SI, 0
		MOV DI, 0
		MOV I, 0
		
		MOV BH, ARRAYSIZE
		CMP I, BH
		JE ENDFINDMIN
		
		SORTOUTERLOOP:
			MOV TEMPNMBR, 32767
			MOV AL, I
			MOV J, AL
			
			SORTINNERLOOP:
				MOV AX, NONSORTEDARRAY+DI
			
				CMP AX, TEMPNMBR
				JGE SKIPSORT
				
				MOV TEMPNMBR, AX
				MOV TEMPINDX, DI
				
				SKIPSORT:
					INC J
					MOV BH, [ARRAYSIZE]
					CMP J, BH
					JE ENDINNERLOOP
			
					ADD DI, 2
					JMP SORTINNERLOOP
					
			ENDINNERLOOP:
			MOV DI, TEMPINDX
			MOV AX, NONSORTEDARRAY+SI
			MOV NONSORTEDARRAY+DI, AX
			MOV AX, TEMPNMBR
			MOV NONSORTEDARRAY+SI, AX
			
			INC I
			MOV BH, [ARRAYSIZE]
			CMP I, BH
			JE ENDSORT
			
			ADD SI, 2
			MOV DI, SI
			JMP SORTOUTERLOOP
		ENDSORT:
			RET
    SORT ENDP
   
    PRINTRESULT PROC NEAR
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGSUM
		INT 021H
		
		CMP ERRORBOOL, 1
		JE SKIPSUM
		MOV AX, SUMNUM
		MOV TEMPNMBR, AX
		CALL PRINTNUMBER
		JMP NEXT
		
		SKIPSUM:
		CALL PRINTERROR
		
		NEXT:
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGMIN
		INT 021H
		
		CMP ARRAYSIZE, 0
		JE SKIPPRINTMIN
		
		MOV AX, MINNUM
		MOV TEMPNMBR, AX
		CALL PRINTNUMBER
		
		SKIPPRINTMIN:
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGMAX
		INT 021H
		
		CMP ARRAYSIZE, 0
		JE SKIPPRINTMAX
		
		MOV AX, MAXNUM
		MOV TEMPNMBR, AX
		CALL PRINTNUMBER
		
		SKIPPRINTMAX:
		
   		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGSORT
		INT 021H
		
		CALL PRINTARRAY
		
		RET
    PRINTRESULT ENDP
   
    PRINTNUMBER PROC NEAR
		MOV BX, TEMPNMBR
		OR BX, BX
		JNS M1
		
		MOV AL, '-'
		INT 29H
		NEG BX
		
		M1:
			MOV AX, BX
			XOR CX, CX
			MOV BX, 10
		
		M2:
			XOR DX, DX
			DIV BX
			ADD DL, '0'
			PUSH DX
			INC CX
			TEST AX, AX
			JNZ M2
			
		M3:
			POP AX
			INT 29H
			LOOP M3
		
        RET
    PRINTNUMBER ENDP
   
    PRINTARRAY PROC NEAR
		LEA SI, NONSORTEDARRAY
		MOV I, 0
		
		MOV BH, ARRAYSIZE
		CMP I, BH
		JE ENDARRPRINT
		
		ARRPRINTLOOP:
			MOV AX, [SI]
			MOV TEMPNMBR, AX
			CALL PRINTNUMBER
			
			MOV AH, 02H
			MOV DL, ' '
			INT 021H
			
			INC I
			MOV BH, [ARRAYSIZE]
			CMP I, BH
			JE ENDARRPRINT
			
			ADD SI, 2
			JMP ARRPRINTLOOP
		ENDARRPRINT:
			RET
    PRINTARRAY ENDP
   
    PRINTERROR PROC NEAR
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGERROR
		INT 021H
		RET
    PRINTERROR ENDP
   
CSEG ENDS
END MAIN