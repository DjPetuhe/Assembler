STSEG SEGMENT PARA STACK "STACK"
	DB 64 DUP("STACK")
STSEG ENDS

DSEG SEGMENT PARA PUBLIC "DATA"
	MSGSIZE DB 'Enter size of square matrix (from 1 to 16): ','$'
	MSGINPUT DB 'Enter matrix elements:','$'
	MSGELEM DB 'Enter sought element: ','$'
	MSGRESULT DB 'Indexes of sought element: ','$'
	MSGNOTHING DB 'Didnt find any indexes with that elements :(','$'
	MSGERROR DB 'Error!','$'
	MSGDOUBPOINTS DB ': ','$'
	MSGMAT DB 'Current Matrix: ','$'
	
	STRNUMBER LABEL BYTE
	MAXLEN DB 7
	NUMLEN DB 0
	NUMFLD DB 7 DUP(0DH)
	
	MATRIX DW 256 DUP (0)
	MATRIXSIZE DB 0
	
	SOUGHTEL DW 0
	FOUNDI DB 256 DUP (0DH)
	FOUNDJ DB 256 DUP (0DH)
	
	I DB 0
	J DB 0
	SOUGHTI DB 0
	SOUGHTJ DB 0
	
	TEMPNMBR DW 0
	TEMPINDEX DW 0
	ERRORBOOL DB 0
	NEGATIVE DB 0
	LIMITCONST EQU 32768
DSEG ENDS

CSEG SEGMENT PARA PUBLIC "CODE"

	ASSUME CS:CSEG, DS:DSEG, SS:STSEG

	MAIN PROC FAR
		PUSH DS
		MOV AX, 0
		PUSH AX
		MOV AX, DSEG
		MOV DS, AX
		
		CALL INPUTSIZE
		CMP ERRORBOOL, 0
		JG ERRORCLOSE
		
		CALL INPUTMATRIX
		CMP ERRORBOOL, 0
		JG ERRORCLOSE
		
		CALL PRINTCURMAT
		
		CALL INPUTSOUGHT
		CMP ERRORBOOL, 0
		JG ERRORCLOSE
		
		CALL FINDELEMENTS
		CALL PRINTRESULT
		
		JMP CLOSE
		
		ERRORCLOSE:
			CALL PRINTERROR
		CLOSE:
			RET
	MAIN ENDP
   
    INPUTSIZE PROC NEAR
   		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGSIZE
		INT 21H
		
		MOV AH, 0AH
		LEA DX, STRNUMBER
		INT 21H
		
		CALL TRANSLATENUMBER
		CMP TEMPNMBR, 16
		JG ERRINPCLOSE
		CMP TEMPNMBR, 1
		JL ERRINPCLOSE
		MOV AX, TEMPNMBR
		MOV MATRIXSIZE, AL
		JMP INPCLOSE
		
		ERRINPCLOSE:
			MOV ERRORBOOL, 1
			
		INPCLOSE:
			RET
    INPUTSIZE ENDP
   
	INPUTSOUGHT PROC NEAR
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGELEM
		INT 21H
		
		MOV AH, 0AH
		LEA DX, STRNUMBER
		INT 21H
		
		CALL TRANSLATENUMBER
		MOV AX, TEMPNMBR
		MOV SOUGHTEL, AX
		
		RET
	INPUTSOUGHT ENDP
	
    INPUTMATRIX PROC NEAR
      	MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGINPUT
		INT 21H
		
		MOV I, 0
		MOV J, 0
		MOV DI, 0
		
		INPUTLOOP:
			MOV BH, MATRIXSIZE
			CMP J, BH
			JGE INCI
			JMP NOTINCI
			
		INCI:
			MOV J, 0
			INC I
			CMP I, BH
			JGE ENDINPUT
		
		NOTINCI:
			MOV AL, 0AH
			INT 29H
			
			MOV AL, I
			XOR AH, AH
			MOV TEMPNMBR, AX
			INC TEMPNMBR
			CALL PRINTNUMBER
			
			MOV AL, 2EH
			INT 29H
			
			MOV AL, J
			MOV TEMPNMBR, AX
			INC TEMPNMBR
			CALL PRINTNUMBER
			
			MOV AH, 09H
			LEA DX, MSGDOUBPOINTS
			INT 21H
			
			MOV AH, 0AH
			LEA DX, STRNUMBER
			INT 21H
			
			CALL TRANSLATENUMBER
			CMP ERRORBOOL, 0
			JG MATINPUTERROR
			
			MOV AL, I
			XOR AH, AH
			MOV BL, MATRIXSIZE
			XOR BH, BH
			MUL BX
			ADD AL, J
			MOV BX, 2
			MUL BX			
			MOV DI, AX
			
			MOV BX, TEMPNMBR
			MOV MATRIX+DI, BX
			
			INC J
			JMP INPUTLOOP
		MATINPUTERROR:
			MOV ERRORBOOL, 1
		ENDINPUT:
			RET
    INPUTMATRIX ENDP
   
    TRANSLATENUMBER PROC NEAR
		XOR AX, AX
		MOV BX, 10
		
		LEA SI, NUMFLD
		CMP BYTE PTR [SI], "-"
		JNE STARTLOOP
		
		MOV NEGATIVE, 1
		INC SI
		STARTLOOP:
			MOV CL, [SI]
			CMP CL, 0DH
			JE ENDLOOP
			
			IMUL BX
			JO TRANSLATEERROR
			
			CMP CL, 30H
			JB TRANSLATEERROR
			CMP CL, 39H
			JA TRANSLATEERROR
			
			SUB CL, 30H
			ADD AX, CX
			JO CHECKEXCEPTION
			
			INC SI
			JMP STARTLOOP
			
		CHECKEXCEPTION:
			CMP AX, LIMITCONST
			JNE TRANSLATEERROR
			CMP NEGATIVE, 0
			JE TRANSLATEERROR
			
		ENDLOOP:
			CMP NEGATIVE, 0
			JE FINISH
			NEG AX
			
		FINISH:
			MOV TEMPNMBR, AX
			MOV NEGATIVE, 0
			JMP TRANSLATERETURN
			
		TRANSLATEERROR:
			MOV ERRORBOOL, 1
			
		TRANSLATERETURN:
			RET
	TRANSLATENUMBER ENDP
   
	FINDELEMENTS PROC NEAR
		MOV SI, 0
		MOV DI, 0
		MOV I, 0
		MOV J, 0
		
		MATFINDTLOOP:
			MOV BH, MATRIXSIZE
			CMP J, BH
			JGE INCFINDI
			JMP NOTINCFINDI
			
		INCFINDI:
			MOV J, 0
			INC I
			CMP I, BH
			JGE ENDMATFIND
			
		NOTINCFINDI:
			MOV AL, I
			XOR AH, AH
			MOV BL, MATRIXSIZE
			XOR BH, BH
			MUL BX
			ADD AL, J
			MOV BX, 2
			MUL BX			
			MOV SI, AX
			
			MOV BX, MATRIX+SI
			CMP BX, SOUGHTEL
			JNE NOTEQ
			
			MOV AL, I
			MOV FOUNDI+DI, AL
			MOV AL, J
			MOV FOUNDJ+DI, AL
			INC DI
			
		NOTEQ:
			INC J
			JMP MATFINDTLOOP
		ENDMATFIND:
			RET	
	FINDELEMENTS ENDP
   
    PRINTNUMBER PROC NEAR
		MOV BX, TEMPNMBR
		OR BX, BX
		JNS M1
		
		MOV AL, '-'
		INT 29H
		NEG BX
		
		M1:
			MOV AX, BX
			XOR CX, CX
			MOV BX, 10
		
		M2:
			XOR DX, DX
			DIV BX
			ADD DL, '0'
			PUSH DX
			INC CX
			TEST AX, AX
			JNZ M2
			
		M3:
			POP AX
			INT 29H
			LOOP M3
		
        RET
    PRINTNUMBER ENDP
   
    PRINTCURMAT PROC NEAR
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGMAT
		INT 21H
		
		MOV AL, 0AH
		INT 29H
		
		MOV SI, 0
		MOV I, 0
		MOV J, 0
		
		MOV AL, I
		XOR AH, AH
		MOV TEMPNMBR, AX
		INC TEMPNMBR
		CALL PRINTNUMBER
		
		MOV AH, 09H
		LEA DX, MSGDOUBPOINTS
		INT 21H
		
		MATPRINTLOOP:
			
			MOV BH, MATRIXSIZE
			CMP J, BH
			JGE INCPRI
			JMP NOTINCPRI
			
		INCPRI:
			MOV J, 0
			INC I
			CMP I, BH
			JGE ENDMATPRINT
			
			MOV AL, 0AH
			INT 29H
			
			MOV AL, I
			XOR AH, AH
			MOV TEMPNMBR, AX
			INC TEMPNMBR
			CALL PRINTNUMBER
			
			MOV AH, 09H
			LEA DX, MSGDOUBPOINTS
			INT 21H
			
		NOTINCPRI:
			MOV AL, I
			XOR AH, AH
			MOV BL, MATRIXSIZE
			XOR BH, BH
			MUL BX
			ADD AL, J
			MOV BX, 2
			MUL BX			
			MOV SI, AX
			
			MOV BX, MATRIX+SI
			MOV TEMPNMBR, BX
			CALL PRINTNUMBER

			MOV AL, 20H
			INT 29H
			
			INC J
			JMP MATPRINTLOOP
		ENDMATPRINT:
			RET
    PRINTCURMAT ENDP
   
    PRINTRESULT PROC NEAR		
		MOV AL, 0AH
		INT 29H
		
		CMP FOUNDI, 0DH
		JE NOTHINGFOUND
		
		MOV AH, 09H
		LEA DX, MSGRESULT
		INT 21H
		
		MOV SI, 0
		XOR BH, BH
		
		RESULTLOOP:
			CMP FOUNDI+SI, 0DH
			JE ENDRESULTLOOP
		
			MOV AL, 20H
			INT 29H
		
			MOV BL, FOUNDI+SI
			MOV TEMPNMBR, BX
			INC TEMPNMBR
			CALL PRINTNUMBER
		
			MOV AL, 2CH
			INT 29H
		
			MOV BL, FOUNDJ+SI
			MOV TEMPNMBR, BX
			INC TEMPNMBR
			CALL PRINTNUMBER
		
			MOV AL, 3BH
			INT 29H
			
			INC SI
			JMP RESULTLOOP
		NOTHINGFOUND:
			MOV AH, 09H
			LEA DX, MSGNOTHING
			INT 21H
			
		ENDRESULTLOOP:
			RET
    PRINTRESULT ENDP
	
    PRINTERROR PROC NEAR
		MOV AL, 0AH
		INT 29H
		
		MOV AH, 09H
		LEA DX, MSGERROR
		INT 021H
		RET
    PRINTERROR ENDP
   
CSEG ENDS
END MAIN